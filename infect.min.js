// infect.js v0.3.3 (2013-12-28) //
!function(a,b){"function"==typeof define&&define.amd?define(b):"object"==typeof exports?module.exports=b():a.infect=b()}(this,function(){function a(a){return/ (.*)]/.exec(Object.prototype.toString.call(a))[1]}function b(b){var c,d=[].slice.call(arguments,1),e="";for(c=0;c<d.length;c++)e+=e.length>0?", "+a(d[c]):a(d[c]);throw i+"Invalid call to infect."+b+"("+e+")"}function c(c,d){"String"===a(c)&&"Undefined"!==a(d)&&d instanceof Object?(c=0===c.indexOf(h)?c.substr(h.length):c,g[c]=d):b("set",c,d)}function d(c){return"String"===a(c)?(c=0===c.indexOf(h)?c.substr(h.length):c,g[c]||void 0):(b("get",c),void 0)}function e(c,e){var f,g;if("Object"===a(c)&&e instanceof Array){for(g=e.length;g--;)f=e[g],f=0===f.indexOf(h)?f.substr(h.length):f,c[h+f]=d(f);return c}b("obj",c,e)}function f(c,e,f){var g,j,k,l,m,n;if("Function"===a(c)){for(e=e||{},"Array"==a(f)&&f.length>0?(k=f.map(function(a){return a[0]===h&&(a=a.slice(1)),a}).map(function(a){return h+a}),n=!0):(k=/\(([^)]+)/.exec(c.toString()),k=null!==k?k[1]:"",k&&(k=k.split(/\s*,\s*/))),g=l=k.length;g--;){if(j=k[g],0!==j.indexOf(h)){k=k.slice(g+1);break}k[g]=d(j)||j}return m=function(){var b=[].slice.call(arguments),f=b.length+k.length,h=e;for(this instanceof m&&(h=this);l>f;f++)b.push(void 0);for(g=k.length;g--;)"String"===a(k[g])&&(k[g]=d(k[g]));if(!n&&f>l)throw i+"Too many parameters! I expected "+(l-k.length)+" (or less) but got "+b.length;return b=b.concat(k),c.apply(h,b)},m.prototype=c.prototype,m.prototype.constructor=m,m}b("func",c,e)}var g={},h="$",i=" == infect.js => ";return{set:c,get:d,obj:e,func:f,funk:f}});